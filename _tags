# OASIS_START
# DO NOT EDIT (digest: 2c877cc481b91d4c737c8c41de5c067a)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library aws
"lib/aws.cmxs": use_aws
<lib/*.ml{,i,y}>: package(calendar)
<lib/*.ml{,i,y}>: package(ezxmlm)
<lib/*.ml{,i,y}>: package(nocrypto)
<lib/*.ml{,i,y}>: package(uri)
# Library aws_lwt
"lwt/aws_lwt.cmxs": use_aws_lwt
"lwt/runtime.cmx": for-pack(Aws_lwt)
<lwt/*.ml{,i,y}>: package(calendar)
<lwt/*.ml{,i,y}>: package(cohttp.lwt)
<lwt/*.ml{,i,y}>: package(ezxmlm)
<lwt/*.ml{,i,y}>: package(lwt)
<lwt/*.ml{,i,y}>: package(nocrypto)
<lwt/*.ml{,i,y}>: package(ssl)
<lwt/*.ml{,i,y}>: package(uri)
<lwt/*.ml{,i,y}>: use_aws
# Library aws_async
"async/aws_async.cmxs": use_aws_async
"async/runtime.cmx": for-pack(Aws_async)
<async/*.ml{,i,y}>: package(async)
<async/*.ml{,i,y}>: package(async_ssl)
<async/*.ml{,i,y}>: package(calendar)
<async/*.ml{,i,y}>: package(cohttp.async)
<async/*.ml{,i,y}>: package(ezxmlm)
<async/*.ml{,i,y}>: package(nocrypto)
<async/*.ml{,i,y}>: package(threads)
<async/*.ml{,i,y}>: package(uri)
<async/*.ml{,i,y}>: use_aws
# Executable aws_gen
<src/aws_gen.{native,byte}>: package(cmdliner)
<src/aws_gen.{native,byte}>: package(ocaml-migrate-parsetree)
<src/aws_gen.{native,byte}>: package(ocamlgraph)
<src/aws_gen.{native,byte}>: package(ppx_tools)
<src/aws_gen.{native,byte}>: package(ppx_tools.metaquot)
<src/aws_gen.{native,byte}>: package(unix)
<src/aws_gen.{native,byte}>: package(yojson)
<src/*.ml{,i,y}>: package(cmdliner)
<src/*.ml{,i,y}>: package(ocaml-migrate-parsetree)
<src/*.ml{,i,y}>: package(ocamlgraph)
<src/*.ml{,i,y}>: package(ppx_tools)
<src/*.ml{,i,y}>: package(ppx_tools.metaquot)
<src/*.ml{,i,y}>: package(unix)
<src/*.ml{,i,y}>: package(yojson)
# OASIS_STOP
"libraries": -traverse
"libraries": not_hygienic
